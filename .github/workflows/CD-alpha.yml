name: Continuous-delivery-alpha
'on':
  push:
    branches:
      - alpha

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Use Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'

      - name: Use yarn
        uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
          yarn install

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Project
        run: |
          cd android && ./gradlew assemble --no-daemon
      
      - name: Build Debug APK
        run: |
          cd android && ./gradlew assembleDebug --no-daemon
          
      - name: Build Release APK
        run: |
          cd android && ./gradlew assembleRelease  --no-daemon

      - name: Sign app bundle (aab)
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release/app-release.apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: DatingApp
          path: android/app/build/outputs/apk/release/app-release.apk
          
#       - name: Distribute app via Firebase App Distribution
#         env:
#           firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
#           firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
#           firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
#           notes: ${{ github.event.head_commit.message }}
#         run: |
#           yarn global add firebase-tools
#           export PATH="$(yarn global bin):$PATH"
#           firebase \
#             appdistribution:distribute android/app/build/outputs/apk/debug/app-debug.apk \
#             --app $firebaseAppId \
#             --release-notes "$notes" \
#             --groups "$firebaseGroups" \
#             --token "$firebaseToken"

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: ${{ secrets.FIREBASE_GROUPS }}
          file: ${{steps.sign_app.outputs.signedReleaseFile}}


