name: Continuous-delivery-main
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted


    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Use Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'

      - name: Use yarn
        uses: c-hive/gha-yarn-cache@v1

      - name: Install node modules
        run: |
          yarn install

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Run test and generate coverage report
        run: |
          yarn test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # - name: Cache Gradle Wrapper
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      # - name: Cache Gradle Dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.gradle/caches
      #     key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-caches-

      # - name: Make Gradlew Executable
      #   run: cd android && chmod +x ./gradlew

      # - name: Build Android App Bundle
      #   run: |
      #     cd android && ./gradlew bundleRelease --no-daemon

      # - name: Sign App Bundle (AAB)
      #   id: sign_app
      #   uses: r0adkll/sign-android-release@v1.0.1
      #   with:
      #     releaseDirectory: android/app/build/outputs/bundle/release
      #     signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
      #     alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
      #     keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Signed App Bundle
      #     path: android/app/build/outputs/bundle/release

      # - name: Upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{secrets.FIREBASE_APP_ID}}
      #     token: ${{secrets.FIREBASE_TOKEN}}
      #     groups: ${{ secrets.FIREBASE_GROUPS }}
      #     file: android/app/build/outputs/apk/release/app-release.apk

      # - name: Distribute app via Firebase App Distribution
      #   env:
      #     firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
      #     firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
      #     firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
      #     notes: ${{ github.event.head_commit.message }}
      #   run: |
      #     yarn global add firebase-tools
      #     export PATH="$(yarn global bin):$PATH"
      #     firebase \
      #       appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
      #       --app $firebaseAppId \
      #       --release-notes "$notes" \
      #       --groups "$firebaseGroups" \
      #       --token "$firebaseToken"
